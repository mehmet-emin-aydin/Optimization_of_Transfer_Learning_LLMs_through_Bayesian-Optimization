1. Model girdisi için verisetini token a çevirmek için "Tokenizer" ı oluşturmalıyız. -> "Tokenizer.py"

2. Modeli eğiteceğimiz verisetini temizlemeliyiz. -> "VeriTemizleme.py"

3. Modelin hangi cihazda eğitileceğine göre aşağıdaki adımlar takip edilmeli
    3.1 Modeli CPU da eğitmek istiyorsanız torch.device("cpu") olarak belirtmeniz yeterli.
    3.2 Modeli GPU da eğitmek istiyorsanız "cuda" nın ekran kartını desteklediğinden emin olmalısınız ve aşağıdaki aşamaları takip etmelisiniz.
        3.2 Ekran kartınıza uygun "cudaToolkit" ve "cuDNN" kurulumunu yapmalısınız.
        3.3 toolkitle uyuşan pyTorch a sahip olduğunuzdan emin olun.
        3.4 Model eğitim aşamasında torch.device("cuda") olarak belirtmeniz ve hem verisetini hem de modeli "cuda" ya yüklediğinizden emin olun.

4. Proje süreci gereği önce M0 modelini elde etmelisiniz. -> "M0_Modeli.py"

5. Daha sonra M0 modelini initial model olarak kullanıp;
    5.1 D1 veriseti ile M1 modelini eğitmelisiniz. -> "M1_Modeli.py"
    5.2 D2 veriseti ile M2 modelini eğitmelisiniz. -> "M2_Modeli.py"

6. Projenin araştırma konusu olan "Bayes Optimizasyonu" nu gerçekleştirmek için; ->Bayes_Optimizasyonu.py"
    6.1 M1 ve M2 modellerinden "merged_weight = U*w1 + (1-U)*w2" denklemiyle yeni modeller elde edilir.
    6.2 Bu modellerin D1Sub, D2Sub verisetleriyle başarı skorları hesaplanır ve en iyi model kaydedilir.

7. Optimizasyonu lineer aramadan alan aramasına çıkarmak için; 
    7.1 M1 modelini "D2Sub" ile eğiterek "Model A" yı, -> "Model_A-B-C.py"
    7.2 M2 modelini "D1Sub" ile eğiterek "Model B" yi, -> "Model_A-B-C.py"
    7.3 M0 modelini "D1Sub" + D2Sub" ile eğiterek "Model C" yi, -> "Model_A-B-C.py"
    7.4 M1 modelini "D1 + D2" ile eğiterek "Model D" yi elde ederiz. -> "Model_D.py"

8. Optimizasyon ile elde edilen modelin başarı skorunu yorumlayabilmek için; -> "Basari_Skoru_Hesaplama.py"
    8.1 M1, M2 ve  A-B-C modellerinin "Top1 - Top5" skorları hesaplanır ve "Merged_Model" in bu modellerden %5 daha başarılı skor üretip üretmediğine bakılır.
    8.2 Model D nin başarı skoru hesaplanır ve "Merged_Model" in başarı skorunun bu modelden en çok 1 standart sapma kadar düşük olup olmadığına bakılır.

